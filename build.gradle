buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'


// jar 패키징 할 때 사용할 이름과 버전 선언
jar {
    baseName = 'itrbatch'
    //version = '0.0.1-SNAPSHOT'
    manifest { attributes 'Main-Class': 'com.saramin.lab.resumeAddFieldValueApplication'}
    dependsOn configurations.runtime
    from {
        configurations.compile.collect {it.isDirectory()? it: zipTree(it)}
    }
}

version = '0.0.1'
sourceCompatibility = 1.8


repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.apache.tomcat.embed:tomcat-embed-jasper')
    compile("org.springframework.boot:spring-boot-starter-batch")
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    compile('javax.servlet:jstl:1.2')

    //DB
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.196'
    // https://mvnrepository.com/artifact/org.mybatis/mybatis
    compile group: 'org.mybatis', name: 'mybatis', version: '3.4.5'
    // https://mvnrepository.com/artifact/org.mybatis/mybatis-spring
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.1'
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.45'

    //JSON
    compile group: 'org.codehaus.jackson', name: 'jackson-core-asl', version: '1.9.13'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    //HttpClient
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    //Lang
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    //Local Library
    compile fileTree(dir: 'extLib', include: '*.jar')
    /** 컴파일 시만 */
    compile('org.projectlombok:lombok')
    /** 테스트 컴파일 */
    testCompile('org.springframework.boot:spring-boot-starter-test')

}
